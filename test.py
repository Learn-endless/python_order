type()		//查看数据类型

for name in lst:    	//遍历列表
      print(name)

//列表的增加
列表名.append（需要添加的内容）    // 末尾增加数据

列表名.insert（下标，需要添加的内容）//指定位置增加数据

列表名 = 列表名 + 列表名 	//列表相加

//列表的删除
列表名.pop( 下标 ) 	//无参数时，移除最后一个列表元素

列表名.remove（需要删除的内容）   //指定内容删除

列表名.clear（）      //清楚全部内容

//查询操作 - 列表
变量名 = 列表名.index（需要查询的内容）    //返回下标

//字符串操作
字符.lower（）	//将大写字母转化为小写字母

字符.upper( )	//将小写字母转化为大写字母

字符.isdigit（）         //判断是否为数字组成

字符串.center(数字，需要填充的符号)   //例： =====开始下载=====

len(列表名)              //求出列表中的元素个数

time.sleep(秒数)      //注意前面要引 import time

pass                      //用来保持程序的完整性，占一条语句的位置

//字典操作
type（字典名）     //查看类型

//字典增加
直接：字典名[键] = 赋值    //不存在，增加，存在，修改

字典名.setdefault(键值对)   //存在，不修改，不存在，增加

//字典删除操作
user_info.clear( )    // 清空字典

字典名.pop(键)    //根据键删除键值对

字典名.popitem（）  //随机删除一个键值对

//字典的查询操作
变量 = 字典名[键]    //存在，返回值，不存在，报错

变量 = 字典名.get（键）    //存在，返回值，不存在，返回None


# ================================class_2=========================================

//python中的定义函数

def 函数名（形式参数1，形式参数2，...）:
    语句1
    语句2
    语句3
    ...
//使用函数

函数名（实际参数1，实际参数2，...）

//注意：当函数没有返回值时，默认返回None

//当函数的形式参数个数和实际参数不匹配时，报错

//在python中使用函数时，记得要注意缩进格式。


//当定义的函数参数有默认值时
def get_info(name, age, gender='男')
    print("名字{},年龄{},性别{}".format(name, age, gender))

//当函数有实际参数时，使用的是传递的实际参数值
get_info('张三', 20, '女')
get_info('李四', 21, '男')

//当函数没有实际参数时，使用默认值(前提是定义函数的形式参数有默认值)
get_info('王五', 22)

//在使用函数时，也可以使用关键字传参（不用一一对应位置）
get_info(age=28,name='大佬',gender='女')

/**
* python右对齐函数:字符串名.rjust(总占位数) / format(字符串名，'>总占位数')
*
* python左对齐函数:字符串名.ljust(总占位数) / format(字符串名，'<总占位数')
*
*/


//函数的可变参数：
// *args:接收位置的参数      （列表操作）
// **kwargs:接收关键字的参数 （字典操作）

例：
def say_hello(*args):
    print(args)

say_hello('helo', '你好', '亚麻跌')

def say_hello(**kwargs):
    print(kwargs)

say_hello(taiyu='萨瓦迪卡', hanyu='阿尼')


//函数可以返回多个值
def fac（x,y）
    return x,y

ret = fac(1,2)
print(ret)




